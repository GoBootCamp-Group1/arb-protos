syntax = "proto3";

option go_package = "/";
package user;

//import "buf/validate/validate.proto";
//import "github.com/bufbuild/protovalidate-go";

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse) {}
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse) {}
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
  rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse) {}
  rpc GetUsersByRole(GetUsersByRoleRequest) returns (GetUsersByRoleResponse) {}
  rpc AddUserRoles(AddUserRolesRequest) returns (AddUserRolesResponse) {}
  rpc RemoveUserRoles(RemoveUserRolesRequest) returns (RemoveUserRolesResponse) {}
  rpc Authenticate(AuthenticateRequest) returns (AuthenticateResponse) {}
  rpc BlockUser(BlockUserRequest) returns (BlockUserResponse) {}
}

message CreateUserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}

message CreateUserResponse {
  bool success = 1;
  string id = 2;
  string message = 3;
  string error = 4;
}

message UpdateUserRequest {
  string id = 1;
  string name = 2;
  string email = 3;
  string jwt = 4;
}

message UpdateUserResponse {
  bool success = 1;
  string message = 3;
  string error = 4;
}

message Permission {
  string name = 1;
  string id = 2;
}

message Role {
  string name = 1;
  repeated Permission perms = 2;
  string id = 3;
}

message User {
  string id = 1;
  string name = 2;
  string email = 3;
  repeated Role roles = 4;
  bool blocked = 5;
}

message GetUserByIdRequest {
  string id = 1;
  string jwt = 2;
}

message GetUserByIdResponse {
  bool success = 1;
  User user = 2;
  string message = 3;
  string error = 4;
}

message GetUserByEmailRequest {
  string email = 1;
  string jwt = 2;
}

message GetUserByEmailResponse {
  bool success = 1;
  User user = 2;
  string message = 3;
  string error = 4;
}

message DeleteUserRequest {
  string id = 1;
  string jwt = 2;
}

message DeleteUserResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
}

message GetAllUsersRequest {
  string jwt = 1;
}

message GetAllUsersResponse {
  bool success = 1;
  repeated User users = 2;
  string message = 3;
  string error = 4;
}

message GetUsersByRoleRequest {
  string roleName = 1;
  string jwt = 2;
}

message GetUsersByRoleResponse {
  bool success = 1;
  repeated User users = 2;
  string message = 3;
  string error = 4;
}

message AddUserRolesRequest {
  string id = 1;
  repeated string roleNames = 2;
  string jwt = 3;
}

message AddUserRolesResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
}

message RemoveUserRolesRequest {
  string id = 1;
  repeated string roleNames = 2;
  string jwt = 3;
}

message RemoveUserRolesResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
}

message AuthenticateRequest {
  string email = 1;
  string password = 2;
  string jwt = 3;
}

message AuthenticateResult {
  string userID = 1;
  string name = 2;
  repeated Role roles = 3;
}

message AuthenticateResponse {
  bool success = 1;
  AuthenticateResult data = 2;
  string message = 3;
  string error = 4;
}

message BlockUserRequest {
  string userId = 1;
  string jwt = 3;
}

message BlockUserResponse {
  bool success = 1;
  string message = 3;
  string error = 4;
}