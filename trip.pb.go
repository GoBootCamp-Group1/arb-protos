// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: api/grpc/proto/trip.proto

package arb_protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId         string                 `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Origin            string                 `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination       string                 `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	VehicleId         string                 `protobuf:"bytes,4,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	DepartureTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	ArrivalTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	UserReleaseTime   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=user_release_time,json=userReleaseTime,proto3" json:"user_release_time,omitempty"`
	AgencyReleaseTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=agency_release_time,json=agencyReleaseTime,proto3" json:"agency_release_time,omitempty"`
	MinPassengers     int32                  `protobuf:"varint,9,opt,name=min_passengers,json=minPassengers,proto3" json:"min_passengers,omitempty"`
	Cost              float32                `protobuf:"fixed32,10,opt,name=cost,proto3" json:"cost,omitempty"`
	TariffUser        float32                `protobuf:"fixed32,11,opt,name=tariff_user,json=tariffUser,proto3" json:"tariff_user,omitempty"`
	TariffAgent       float32                `protobuf:"fixed32,12,opt,name=tariff_agent,json=tariffAgent,proto3" json:"tariff_agent,omitempty"`
	Status            string                 `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	TripType          string                 `protobuf:"bytes,14,opt,name=trip_type,json=tripType,proto3" json:"trip_type,omitempty"`
}

func (x *CreateTripRequest) Reset() {
	*x = CreateTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTripRequest) ProtoMessage() {}

func (x *CreateTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTripRequest.ProtoReflect.Descriptor instead.
func (*CreateTripRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTripRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *CreateTripRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *CreateTripRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *CreateTripRequest) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *CreateTripRequest) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *CreateTripRequest) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *CreateTripRequest) GetUserReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UserReleaseTime
	}
	return nil
}

func (x *CreateTripRequest) GetAgencyReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AgencyReleaseTime
	}
	return nil
}

func (x *CreateTripRequest) GetMinPassengers() int32 {
	if x != nil {
		return x.MinPassengers
	}
	return 0
}

func (x *CreateTripRequest) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *CreateTripRequest) GetTariffUser() float32 {
	if x != nil {
		return x.TariffUser
	}
	return 0
}

func (x *CreateTripRequest) GetTariffAgent() float32 {
	if x != nil {
		return x.TariffAgent
	}
	return 0
}

func (x *CreateTripRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateTripRequest) GetTripType() string {
	if x != nil {
		return x.TripType
	}
	return ""
}

type CreateTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateTripResponse) Reset() {
	*x = CreateTripResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTripResponse) ProtoMessage() {}

func (x *CreateTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTripResponse.ProtoReflect.Descriptor instead.
func (*CreateTripResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTripResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTripRequest) Reset() {
	*x = GetTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripRequest) ProtoMessage() {}

func (x *GetTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripRequest.ProtoReflect.Descriptor instead.
func (*GetTripRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{2}
}

func (x *GetTripRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId         string                 `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Origin            string                 `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination       string                 `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	VehicleId         string                 `protobuf:"bytes,5,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	DepartureTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	ArrivalTime       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	UserReleaseTime   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=user_release_time,json=userReleaseTime,proto3" json:"user_release_time,omitempty"`
	AgencyReleaseTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=agency_release_time,json=agencyReleaseTime,proto3" json:"agency_release_time,omitempty"`
	MinPassengers     int32                  `protobuf:"varint,10,opt,name=min_passengers,json=minPassengers,proto3" json:"min_passengers,omitempty"`
	Cost              float32                `protobuf:"fixed32,11,opt,name=cost,proto3" json:"cost,omitempty"`
	TariffUser        float32                `protobuf:"fixed32,12,opt,name=tariff_user,json=tariffUser,proto3" json:"tariff_user,omitempty"`
	TariffAgent       float32                `protobuf:"fixed32,13,opt,name=tariff_agent,json=tariffAgent,proto3" json:"tariff_agent,omitempty"`
	Status            string                 `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	TripType          string                 `protobuf:"bytes,15,opt,name=trip_type,json=tripType,proto3" json:"trip_type,omitempty"`
	CompanyName       string                 `protobuf:"bytes,16,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
}

func (x *GetTripResponse) Reset() {
	*x = GetTripResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripResponse) ProtoMessage() {}

func (x *GetTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripResponse.ProtoReflect.Descriptor instead.
func (*GetTripResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{3}
}

func (x *GetTripResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTripResponse) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *GetTripResponse) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *GetTripResponse) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *GetTripResponse) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *GetTripResponse) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *GetTripResponse) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *GetTripResponse) GetUserReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UserReleaseTime
	}
	return nil
}

func (x *GetTripResponse) GetAgencyReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AgencyReleaseTime
	}
	return nil
}

func (x *GetTripResponse) GetMinPassengers() int32 {
	if x != nil {
		return x.MinPassengers
	}
	return 0
}

func (x *GetTripResponse) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *GetTripResponse) GetTariffUser() float32 {
	if x != nil {
		return x.TariffUser
	}
	return 0
}

func (x *GetTripResponse) GetTariffAgent() float32 {
	if x != nil {
		return x.TariffAgent
	}
	return 0
}

func (x *GetTripResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetTripResponse) GetTripType() string {
	if x != nil {
		return x.TripType
	}
	return ""
}

func (x *GetTripResponse) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

type UpdateTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId         string                 `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Origin            string                 `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination       string                 `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	VehicleId         string                 `protobuf:"bytes,5,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	DepartureTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	ArrivalTime       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	UserReleaseTime   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=user_release_time,json=userReleaseTime,proto3" json:"user_release_time,omitempty"`
	AgencyReleaseTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=agency_release_time,json=agencyReleaseTime,proto3" json:"agency_release_time,omitempty"`
	MinPassengers     int32                  `protobuf:"varint,10,opt,name=min_passengers,json=minPassengers,proto3" json:"min_passengers,omitempty"`
	Cost              float32                `protobuf:"fixed32,11,opt,name=cost,proto3" json:"cost,omitempty"`
	TariffUser        float32                `protobuf:"fixed32,12,opt,name=tariff_user,json=tariffUser,proto3" json:"tariff_user,omitempty"`
	TariffAgent       float32                `protobuf:"fixed32,13,opt,name=tariff_agent,json=tariffAgent,proto3" json:"tariff_agent,omitempty"`
	Status            string                 `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	TripType          string                 `protobuf:"bytes,15,opt,name=trip_type,json=tripType,proto3" json:"trip_type,omitempty"`
}

func (x *UpdateTripRequest) Reset() {
	*x = UpdateTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTripRequest) ProtoMessage() {}

func (x *UpdateTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTripRequest.ProtoReflect.Descriptor instead.
func (*UpdateTripRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTripRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTripRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *UpdateTripRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *UpdateTripRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *UpdateTripRequest) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *UpdateTripRequest) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *UpdateTripRequest) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *UpdateTripRequest) GetUserReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UserReleaseTime
	}
	return nil
}

func (x *UpdateTripRequest) GetAgencyReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AgencyReleaseTime
	}
	return nil
}

func (x *UpdateTripRequest) GetMinPassengers() int32 {
	if x != nil {
		return x.MinPassengers
	}
	return 0
}

func (x *UpdateTripRequest) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *UpdateTripRequest) GetTariffUser() float32 {
	if x != nil {
		return x.TariffUser
	}
	return 0
}

func (x *UpdateTripRequest) GetTariffAgent() float32 {
	if x != nil {
		return x.TariffAgent
	}
	return 0
}

func (x *UpdateTripRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateTripRequest) GetTripType() string {
	if x != nil {
		return x.TripType
	}
	return ""
}

type UpdateTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateTripResponse) Reset() {
	*x = UpdateTripResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTripResponse) ProtoMessage() {}

func (x *UpdateTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTripResponse.ProtoReflect.Descriptor instead.
func (*UpdateTripResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTripResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTripRequest) Reset() {
	*x = DeleteTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTripRequest) ProtoMessage() {}

func (x *DeleteTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTripRequest.ProtoReflect.Descriptor instead.
func (*DeleteTripRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteTripRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteTripResponse) Reset() {
	*x = DeleteTripResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTripResponse) ProtoMessage() {}

func (x *DeleteTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTripResponse.ProtoReflect.Descriptor instead.
func (*DeleteTripResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTripResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SearchTripsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId     string                 `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Origin        string                 `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination   string                 `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	VehicleId     string                 `protobuf:"bytes,4,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	TripType      string                 `protobuf:"bytes,6,opt,name=trip_type,json=tripType,proto3" json:"trip_type,omitempty"`
	MinDeparture  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=min_departure,json=minDeparture,proto3" json:"min_departure,omitempty"`
	MaxDeparture  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=max_departure,json=maxDeparture,proto3" json:"max_departure,omitempty"`
	MinArrival    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=min_arrival,json=minArrival,proto3" json:"min_arrival,omitempty"`
	MaxArrival    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=max_arrival,json=maxArrival,proto3" json:"max_arrival,omitempty"`
	MinCost       float32                `protobuf:"fixed32,11,opt,name=min_cost,json=minCost,proto3" json:"min_cost,omitempty"`
	MaxCost       float32                `protobuf:"fixed32,12,opt,name=max_cost,json=maxCost,proto3" json:"max_cost,omitempty"`
	SortField     string                 `protobuf:"bytes,13,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`
	SortDirection string                 `protobuf:"bytes,14,opt,name=sort_direction,json=sortDirection,proto3" json:"sort_direction,omitempty"`
}

func (x *SearchTripsRequest) Reset() {
	*x = SearchTripsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTripsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTripsRequest) ProtoMessage() {}

func (x *SearchTripsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTripsRequest.ProtoReflect.Descriptor instead.
func (*SearchTripsRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{8}
}

func (x *SearchTripsRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *SearchTripsRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *SearchTripsRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *SearchTripsRequest) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *SearchTripsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SearchTripsRequest) GetTripType() string {
	if x != nil {
		return x.TripType
	}
	return ""
}

func (x *SearchTripsRequest) GetMinDeparture() *timestamppb.Timestamp {
	if x != nil {
		return x.MinDeparture
	}
	return nil
}

func (x *SearchTripsRequest) GetMaxDeparture() *timestamppb.Timestamp {
	if x != nil {
		return x.MaxDeparture
	}
	return nil
}

func (x *SearchTripsRequest) GetMinArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.MinArrival
	}
	return nil
}

func (x *SearchTripsRequest) GetMaxArrival() *timestamppb.Timestamp {
	if x != nil {
		return x.MaxArrival
	}
	return nil
}

func (x *SearchTripsRequest) GetMinCost() float32 {
	if x != nil {
		return x.MinCost
	}
	return 0
}

func (x *SearchTripsRequest) GetMaxCost() float32 {
	if x != nil {
		return x.MaxCost
	}
	return 0
}

func (x *SearchTripsRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *SearchTripsRequest) GetSortDirection() string {
	if x != nil {
		return x.SortDirection
	}
	return ""
}

type SearchTripsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trips []*Trip `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
}

func (x *SearchTripsResponse) Reset() {
	*x = SearchTripsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTripsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTripsResponse) ProtoMessage() {}

func (x *SearchTripsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTripsResponse.ProtoReflect.Descriptor instead.
func (*SearchTripsResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{9}
}

func (x *SearchTripsResponse) GetTrips() []*Trip {
	if x != nil {
		return x.Trips
	}
	return nil
}

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId         string                 `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Origin            string                 `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination       string                 `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	VehicleId         string                 `protobuf:"bytes,5,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	DepartureTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	ArrivalTime       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	UserReleaseTime   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=user_release_time,json=userReleaseTime,proto3" json:"user_release_time,omitempty"`
	AgencyReleaseTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=agency_release_time,json=agencyReleaseTime,proto3" json:"agency_release_time,omitempty"`
	MinPassengers     int32                  `protobuf:"varint,10,opt,name=min_passengers,json=minPassengers,proto3" json:"min_passengers,omitempty"`
	Cost              float32                `protobuf:"fixed32,11,opt,name=cost,proto3" json:"cost,omitempty"`
	TariffUser        float32                `protobuf:"fixed32,12,opt,name=tariff_user,json=tariffUser,proto3" json:"tariff_user,omitempty"`
	TariffAgent       float32                `protobuf:"fixed32,13,opt,name=tariff_agent,json=tariffAgent,proto3" json:"tariff_agent,omitempty"`
	Status            string                 `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	TripType          string                 `protobuf:"bytes,15,opt,name=trip_type,json=tripType,proto3" json:"trip_type,omitempty"`
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_proto_trip_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_proto_trip_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_api_grpc_proto_trip_proto_rawDescGZIP(), []int{10}
}

func (x *Trip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trip) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Trip) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *Trip) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Trip) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *Trip) GetDepartureTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepartureTime
	}
	return nil
}

func (x *Trip) GetArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArrivalTime
	}
	return nil
}

func (x *Trip) GetUserReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UserReleaseTime
	}
	return nil
}

func (x *Trip) GetAgencyReleaseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AgencyReleaseTime
	}
	return nil
}

func (x *Trip) GetMinPassengers() int32 {
	if x != nil {
		return x.MinPassengers
	}
	return 0
}

func (x *Trip) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Trip) GetTariffUser() float32 {
	if x != nil {
		return x.TariffUser
	}
	return 0
}

func (x *Trip) GetTariffAgent() float32 {
	if x != nil {
		return x.TariffAgent
	}
	return 0
}

func (x *Trip) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Trip) GetTripType() string {
	if x != nil {
		return x.TripType
	}
	return ""
}

var File_api_grpc_proto_trip_proto protoreflect.FileDescriptor

var file_api_grpc_proto_trip_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x74, 0x72, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x04, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x61,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x86, 0x05, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x41, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x61, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x72, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe5, 0x04,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11,
	0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x50, 0x61,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x69,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x69,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb9, 0x04, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x72, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6d, 0x69,
	0x6e, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6d,
	0x69, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6d,
	0x61, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6d,
	0x69, 0x6e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x61, 0x78,
	0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x41,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x69, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x74, 0x72, 0x69,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x52, 0x05,
	0x74, 0x72, 0x69, 0x70, 0x73, 0x22, 0xd8, 0x04, 0x0a, 0x04, 0x54, 0x72, 0x69, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0f, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x4a, 0x0a, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x69, 0x66,
	0x66, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x69, 0x66, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x69,
	0x66, 0x66, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x32, 0xb0, 0x03, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x53, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x12, 0x21,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70,
	0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x12,
	0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x72, 0x69, 0x70, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x69, 0x70, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x03, 0x5a, 0x01, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_grpc_proto_trip_proto_rawDescOnce sync.Once
	file_api_grpc_proto_trip_proto_rawDescData = file_api_grpc_proto_trip_proto_rawDesc
)

func file_api_grpc_proto_trip_proto_rawDescGZIP() []byte {
	file_api_grpc_proto_trip_proto_rawDescOnce.Do(func() {
		file_api_grpc_proto_trip_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_grpc_proto_trip_proto_rawDescData)
	})
	return file_api_grpc_proto_trip_proto_rawDescData
}

var file_api_grpc_proto_trip_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_grpc_proto_trip_proto_goTypes = []any{
	(*CreateTripRequest)(nil),     // 0: transportation.CreateTripRequest
	(*CreateTripResponse)(nil),    // 1: transportation.CreateTripResponse
	(*GetTripRequest)(nil),        // 2: transportation.GetTripRequest
	(*GetTripResponse)(nil),       // 3: transportation.GetTripResponse
	(*UpdateTripRequest)(nil),     // 4: transportation.UpdateTripRequest
	(*UpdateTripResponse)(nil),    // 5: transportation.UpdateTripResponse
	(*DeleteTripRequest)(nil),     // 6: transportation.DeleteTripRequest
	(*DeleteTripResponse)(nil),    // 7: transportation.DeleteTripResponse
	(*SearchTripsRequest)(nil),    // 8: transportation.SearchTripsRequest
	(*SearchTripsResponse)(nil),   // 9: transportation.SearchTripsResponse
	(*Trip)(nil),                  // 10: transportation.Trip
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_api_grpc_proto_trip_proto_depIdxs = []int32{
	11, // 0: transportation.CreateTripRequest.departure_time:type_name -> google.protobuf.Timestamp
	11, // 1: transportation.CreateTripRequest.arrival_time:type_name -> google.protobuf.Timestamp
	11, // 2: transportation.CreateTripRequest.user_release_time:type_name -> google.protobuf.Timestamp
	11, // 3: transportation.CreateTripRequest.agency_release_time:type_name -> google.protobuf.Timestamp
	11, // 4: transportation.GetTripResponse.departure_time:type_name -> google.protobuf.Timestamp
	11, // 5: transportation.GetTripResponse.arrival_time:type_name -> google.protobuf.Timestamp
	11, // 6: transportation.GetTripResponse.user_release_time:type_name -> google.protobuf.Timestamp
	11, // 7: transportation.GetTripResponse.agency_release_time:type_name -> google.protobuf.Timestamp
	11, // 8: transportation.UpdateTripRequest.departure_time:type_name -> google.protobuf.Timestamp
	11, // 9: transportation.UpdateTripRequest.arrival_time:type_name -> google.protobuf.Timestamp
	11, // 10: transportation.UpdateTripRequest.user_release_time:type_name -> google.protobuf.Timestamp
	11, // 11: transportation.UpdateTripRequest.agency_release_time:type_name -> google.protobuf.Timestamp
	11, // 12: transportation.SearchTripsRequest.min_departure:type_name -> google.protobuf.Timestamp
	11, // 13: transportation.SearchTripsRequest.max_departure:type_name -> google.protobuf.Timestamp
	11, // 14: transportation.SearchTripsRequest.min_arrival:type_name -> google.protobuf.Timestamp
	11, // 15: transportation.SearchTripsRequest.max_arrival:type_name -> google.protobuf.Timestamp
	10, // 16: transportation.SearchTripsResponse.trips:type_name -> transportation.Trip
	11, // 17: transportation.Trip.departure_time:type_name -> google.protobuf.Timestamp
	11, // 18: transportation.Trip.arrival_time:type_name -> google.protobuf.Timestamp
	11, // 19: transportation.Trip.user_release_time:type_name -> google.protobuf.Timestamp
	11, // 20: transportation.Trip.agency_release_time:type_name -> google.protobuf.Timestamp
	0,  // 21: transportation.TripService.CreateTrip:input_type -> transportation.CreateTripRequest
	2,  // 22: transportation.TripService.GetTrip:input_type -> transportation.GetTripRequest
	4,  // 23: transportation.TripService.UpdateTrip:input_type -> transportation.UpdateTripRequest
	6,  // 24: transportation.TripService.DeleteTrip:input_type -> transportation.DeleteTripRequest
	8,  // 25: transportation.TripService.SearchTrips:input_type -> transportation.SearchTripsRequest
	1,  // 26: transportation.TripService.CreateTrip:output_type -> transportation.CreateTripResponse
	3,  // 27: transportation.TripService.GetTrip:output_type -> transportation.GetTripResponse
	5,  // 28: transportation.TripService.UpdateTrip:output_type -> transportation.UpdateTripResponse
	7,  // 29: transportation.TripService.DeleteTrip:output_type -> transportation.DeleteTripResponse
	9,  // 30: transportation.TripService.SearchTrips:output_type -> transportation.SearchTripsResponse
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_api_grpc_proto_trip_proto_init() }
func file_api_grpc_proto_trip_proto_init() {
	if File_api_grpc_proto_trip_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_grpc_proto_trip_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTripResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetTripResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTripResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTripResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SearchTripsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SearchTripsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_proto_trip_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_grpc_proto_trip_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_proto_trip_proto_goTypes,
		DependencyIndexes: file_api_grpc_proto_trip_proto_depIdxs,
		MessageInfos:      file_api_grpc_proto_trip_proto_msgTypes,
	}.Build()
	File_api_grpc_proto_trip_proto = out.File
	file_api_grpc_proto_trip_proto_rawDesc = nil
	file_api_grpc_proto_trip_proto_goTypes = nil
	file_api_grpc_proto_trip_proto_depIdxs = nil
}
