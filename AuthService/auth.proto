syntax = "proto3";

option go_package = "github.com/GoBootCamp-Group1/arb-protos/auth";
package auth;

// The AuthService definition.
service AuthService {
  // Authenticates a user and returns a token
  rpc Login(LoginRequest) returns (LoginResponse);
  // Show User info using token
  rpc Me(MeRequest) returns (MeResponse);
  // Registers a new user
  rpc Register(RegisterRequest) returns (RegisterResponse);
  // Refreshes the authentication token
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  // Validates a token
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
}

message Permission {
  string name = 1;
  string id = 2;
}

message Role {
  string name = 1;
  repeated Permission perms = 2;
  string id = 3;
}

message User {
  string id = 1;
  string name = 2;
  string email = 3;
  repeated Role roles = 4;
}

// The request message containing the user's information for registration
message RegisterRequest {
  string email = 1;
  string password = 3;
}

// The response message for registration
message RegisterResponse {
  string user_id = 1;
  string message = 2;
  bool success = 3;
}

// The request message containing the user's information for registration
message MeRequest {

}

// The response message for registration
message MeResponse {
  bool success = 1;
  User user = 2;
  string message = 3;
  string error = 4;
}

// The request message containing the user's credentials for login
message LoginRequest {
  string email = 1;
  string password = 2;
}

// The response message containing the authentication token
message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  string message = 3;
  bool success = 4;
}

// The request message containing the refresh token
message RefreshTokenRequest {
  string refresh_token = 1;
}

// The response message containing the new authentication token
message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  string message = 3;
  bool success = 4;
}

// The request message containing the token to be validated
message ValidateTokenRequest {
  string token = 1;
}

// The response message containing the validation result
message ValidateTokenResponse {
  bool is_valid = 1;
  string user_id = 2;
  bool success = 3;
}